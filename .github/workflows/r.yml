env:
  MAVEN_OPTS: -Dmaven.wagon.httpconnectionManager.ttlSeconds=60
jobs:
  build:
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      HADOOP_VERSION: ${{ matrix.hadoop }}
      SCALA_VERSION: ${{ matrix.scala }}
      SPARK_VERSION: ${{ matrix.spark }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Delete existing R binaries
      run: "for b in R Rscript\ndo\n  while [ -n \"$(which \"$b\")\" ]\n  do\n   \
        \ sudo rm -v \"$(which \"$b\")\"\n  done\ndone\n"
      shell: bash
    - continue-on-error: true
      name: Delete existing JDK installation(s)
      run: 'sudo apt-get -y remove --purge default-jdk adoptopenjdk-11-hotspot ||
        :

        '
      shell: bash
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.r }}
        use-public-rspm: true
    - continue-on-error: true
      name: Query R dependencies
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        cache: true
        extra-packages: 'any::testthat

          any::rcmdcheck

          '
        working-directory: ./R
    - continue-on-error: true
      env:
        _R_CHECK_FORCE_SUGGESTS_: false
      name: Build and check R package
      uses: r-lib/actions/check-r-package@v2
      with:
        args: c("--no-build-vignettes", "--no-manual", "--no-tests")
        build_args: c("--no-build-vignettes", "--no-manual")
        error-on: '"error"'
        working-directory: ./R
    - continue-on-error: true
      name: Install apache.sedona from source
      run: Rscript -e 'install.packages("./R/", repos = NULL, type = "source")'
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: '8'
    - continue-on-error: true
      id: os-name
      name: Get OS name
      run: '# `os_name` will be like "Ubuntu-20.04.1-LTS"

        OS_NAME=$(lsb_release -ds | sed ''s/\s/-/g'')

        echo "os-name=$OS_NAME" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      if: runner.os != 'Windows'
      name: Cache Spark installations
      uses: actions/cache@master
      with:
        key: apache.sedona-apache-spark-${{ steps.os-name.outputs.os-name }}-${{ env.SPARK_VERSION
          }}
        path: ~/spark
    - continue-on-error: true
      name: Build Sedona libraries
      run: "SPARK_COMPAT_VERSION=\"3.0\"\nif [ ${SPARK_VERSION:2:1} -gt \"3\" ]; then\n\
        \  SPARK_COMPAT_VERSION=${SPARK_VERSION:0:3}\nfi\nmvn -q clean install -DskipTests\
        \ -Dspark=${SPARK_COMPAT_VERSION} -Dscala=${SCALA_VERSION:0:4}\n"
    - continue-on-error: true
      name: Run tests
      run: "if [[ \"${SPARK_VERSION:0:3}\" < \"3.3\" ]]; then\n  case \"$HADOOP_VERSION\"\
        \ in\n    3)\n      export HADOOP_VERSION=3.2\n      ;;\n    2)\n      export\
        \ HADOOP_VERSION=2.7\n      ;;\n  esac\nfi\nexport SPARKLYR_LOG_FILE='/tmp/sparklyr.log'\n\
        source ./.github/workflows/scripts/prepare_sparklyr_sedona_test_env.sh\necho\
        \ \"Apache Sedona jar files: ${SEDONA_JAR_FILES}\"\ncd ./R/tests\nNOT_CRAN='true'\
        \ Rscript testthat.R\n"
      shell: bash
    - continue-on-error: true
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: Worker logs
        path: /tmp/sparklyr.log
    - continue-on-error: true
      if: failure()
      name: Dump worker logs on failure
      run: cat /tmp/sparklyr.log
    strategy:
      fail-fast: true
      matrix:
        hadoop:
        - 3
        r:
        - oldrel
        - release
        scala:
        - 2.12.15
        spark:
        - 3.0.3
        - 3.1.2
        - 3.2.1
        - 3.3.0
        - 3.4.0
        - 3.5.0
name: R build
on:
  repository_dispatch:
    types: trigger-ga___r.yml
